/**:
  controller_manager:
    ros__parameters:
      update_rate: 125  # Hz
      
      robotiq_force_torque_sensor_broadcaster:
        type: force_torque_sensor_broadcaster/ForceTorqueSensorBroadcaster

      # joint_state_broadcaster:
      #   type: joint_state_broadcaster/JointStateBroadcaster
      # admittance_controller:
      #   type: admittance_controller/AdmittanceController
      # scaled_joint_trajectory_admittance_controller:
      #   type: ur_controllers/ScaledJointTrajectoryController

  # will publish the robotiq_force_torque_sensor_broadcaster/wrench topic of type WrenchStamped with the given frame_id
  robotiq_force_torque_sensor_broadcaster:
    ros__parameters:
      sensor_name: robotiq_fts_sensor
      state_interface_names:
        - force.x
        - force.y
        - force.z
        - torque.x
        - torque.y
        - torque.z
      frame_id: robotiq_ft_frame_id

  #================================ Example FOR CHAINING admittance ==============================================================

  admittance_controller:
    # contains minimal parameters that need to be set to load controller
    ros__parameters:
      joints:
        - shoulder_pan_joint
        - shoulder_lift_joint
        - elbow_joint
        - wrist_1_joint
        - wrist_2_joint
        - wrist_3_joint


      command_interfaces:
        - position

      state_interfaces:
        - position
        - velocity

      chainable_command_interfaces:
        - position
        - velocity

      kinematics:
        plugin_name: kinematics_interface_kdl/KinematicsInterfaceKDL
        plugin_package: kinematics_interface  # Just install this package (if not working with debian add it to your workspace)
        base: world # Assumed to be stationary
        tip: tcmale_tip
        group_name: manipulator
        alpha: 0.0005

      ft_sensor:
        name: robotiq_fts_sensor # Sensor name
        frame:
          id: robotiq_ft_frame_id  # Wrench measurements are in this frame
          external: false # force torque frame exists within URDF kinematic chain
        filter_coefficient: 0.005

      control:
        frame:
          id: tcmale_tip # Admittance calcs (displacement etc) are done in this frame. Usually the tool or end-effector
          external: false # control frame exists within URDF kinematic chain

      fixed_world_frame:   # Gravity points down (neg. Z) in this frame (Usually: world or base_link)
        frame:
          id: world # Admittance calcs (displacement etc) are done in this frame. Usually the tool or end-effector
          external: false # control frame exists within URDF kinematic chain

      gravity_compensation:
        frame:
          id: tcmale_tip
          external: false

        CoG: # specifies the center of gravity of the end effector
          pos:
            - 0.001 # x
            - 0.007 # y
            - 0.142 # z
          force: 22.563 #9.81 # mass * 9.81

      admittance:
        selected_axes:
          - true # x
          - true # y
          - true # z
          - true # rx
          - true # ry
          - true # rz

        # Having ".0" at the end is MUST, otherwise there is a loading error
        # F = M*a + D*v + S*(x - x_d)
        mass:
          - 5.5
          - 6.6
          - 7.7
          - 8.8
          - 9.9
          - 10.10

        damping_ratio: # damping can be used instead: zeta = D / (2 * sqrt( M * S ))
          - 2.828427 # x
          - 2.828427 # y
          - 2.828427 # z
          - 2.828427 # rx
          - 2.828427 # ry
          - 2.828427 # rz

        stiffness:
          - 214.1
          - 214.2
          - 214.3
          - 214.4
          - 214.5
          - 214.6

  scaled_joint_trajectory_admittance_controller:
    ros__parameters:
      joints:
        - shoulder_pan_joint
        - shoulder_lift_joint
        - elbow_joint
        - wrist_1_joint
        - wrist_2_joint
        - wrist_3_joint
      command_joints: # Command the admittance controller
        - admittance_controller/shoulder_pan_joint
        - admittance_controller/shoulder_lift_joint
        - admittance_controller/elbow_joint
        - admittance_controller/wrist_1_joint
        - admittance_controller/wrist_2_joint
        - admittance_controller/wrist_3_joint
      command_interfaces:
        - position
      state_interfaces:
        - position
        - velocity
        # - effort
      state_publish_rate: 100.0
      action_monitor_rate: 20.0
      allow_partial_joints_goal: false
      open_loop_control: true
      allow_integration_in_goal_trajectories: true
      constraints:
        stopped_velocity_tolerance: 0.01
        goal_time: 0.0
        admittance_controller/shoulder_pan_joint: { trajectory: 0.2, goal: 0.01 }
        admittance_controller/shoulder_lift_joint: { trajectory: 0.2, goal: 0.01 }
        admittance_controller/elbow_joint: { trajectory: 0.2, goal: 0.01 }
        admittance_controller/wrist_1_joint: { trajectory: 0.2, goal: 0.01 }
        admittance_controller/wrist_2_joint: { trajectory: 0.2, goal: 0.01 }
        admittance_controller/wrist_3_joint: { trajectory: 0.2, goal: 0.01 }